// Generated by CoffeeScript 1.9.2
(function() {
  var update;

  update = function(db, objectType, objectId, measureName) {
    var endKey, startKey;
    endKey = '[' + objectId + ']';
    startKey = '[' + objectId + ',{}]';
    return db.get('_design/' + objectType + '/_view/' + measureName + '-delta?startkey=' + startKey + '&endkey=' + endKey + '&descending=true&limit=1').then(function(deltas) {
      var delta;
      if (deltas.total_rows === 0) {
        return;
      }
      console.log("delta found");
      delta = deltas.rows[0].value;
      console.log("delta=");
      console.log("id:" + delta._id);
      console.log(delta.beehouse_id);
      console.log(delta.timestamp);
      console.log("-----");
      return db.get('_design/' + objectType + '/_view/' + measureName + '?startkey=' + startKey + '&endkey=' + endKey + '&descending=true&limit=1').then(function(absolute) {
        return [delta, absolute.rows[0]];
      }).then(function(arg) {
        var absolute, delta, newAbs;
        delta = arg[0], absolute = arg[1];
        newAbs = absolute.clone();
        delete newAbs._rev;
        delete newAbs._id;
        console.log("absolute =");
        console.log(absolute._id);
        console.log(absolute.beehouse_id);
        console.log(absolute.timestamp);
        console.log("-----");
        newAbs.measureOrigin = "computed";
        newAbs.absoluteSource = absolute._id;
        newAbs.relativeSource = delta._id;
        newAbs.value = absolute.value + delta.value;
        newAbs.timestamp = delta.timestamp;
        return db.save(newAbs).then(function(newAbsId) {
          newAbs._id = newAbsId;
          return [delta, absolute, newAbs];
        }).then(function(arg1) {
          var absolute, delta, newAbs;
          delta = arg1[0], absolute = arg1[1], newAbs = arg1[2];
          delta.absoluteSource = absolute._id;
          delta.absoluteTarget = newAbs._id;
          return db.save(delta);
        }).then(function() {
          console.log("delta updated");
          return update(db, objectType, measureName);
        });
      });
    })["catch"](function(err) {
      return console.log(err);
    });
  };

  module.exports = update;

}).call(this);
