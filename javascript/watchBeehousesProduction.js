// Generated by CoffeeScript 1.9.2
(function() {
  var config, db, moment;

  moment = require('moment');

  config = require('./config');

  db = require('../../openbeelab-db-util/javascript/dbUtil').configuredDriver(config.services.database);

  db.exists(function(err, exists) {
    if (!err && exists) {
      return db.get('_design/apiaries/_view/by_name', function(err, apiaries) {
        var apiary, i, len, results;
        results = [];
        for (i = 0, len = apiaries.length; i < len; i++) {
          apiary = apiaries[i];
          results.push((function(apiary) {
            var beehouse_id, j, len1, ref, results1;
            apiary = apiary.value;
            if (apiary.beehouses != null) {
              ref = apiary.beehouses;
              results1 = [];
              for (j = 0, len1 = ref.length; j < len1; j++) {
                beehouse_id = ref[j];
                results1.push((function(beehouse_id) {
                  return db.get(beehouse_id, function(err, beehouse) {
                    var lastMeasuresUrl;
                    if (!err && (beehouse != null ? beehouse.isActive : void 0)) {
                      lastMeasuresUrl = '_design/' + beehouse.name + '/_view/evening_weight?descending=true&limit=2';
                      return db.get(lastMeasuresUrl, function(err, lastMeasures) {
                        var beehouseIsProducing, beehouseShouldProduce, beekeeper_id, k, len2, now, productionEnd, productionStart, ref1, results2, todayMeasure, trigger, yesterdayMeasure;
                        if (!err && (lastMeasures != null)) {
                          todayMeasure = lastMeasures.rows[0].value;
                          yesterdayMeasure = lastMeasures.rows[1].value;
                          trigger = config.honeyProductionTrigger;
                          now = moment(new Date());
                          productionStart = moment(new Date(now.getYear(), trigger.from.month, trigger.from.day));
                          productionEnd = moment(new Date(now.getYear(), trigger.to.month, trigger.to.day));
                          if (productionEnd.isBefore(productionStart)) {
                            productionEnd = moment(new Date(now.getYear() + 1, trigger.to.month, trigger.to.day));
                          }
                          beehouseShouldProduce = beehouse.isActive && now.isBetween(productionStart, productionEnd);
                          beehouseIsProducing = todayMeasure.value > (yesterdayMeasure.value + trigger.dailyIncrement.value);
                          if (beehouseShouldProduce && !beehouseIsProducing) {
                            if ((apiary.beekeepers != null) && apiary.beekeepers.length > 0) {
                              ref1 = apiary.beekeepers;
                              results2 = [];
                              for (k = 0, len2 = ref1.length; k < len2; k++) {
                                beekeeper_id = ref1[k];
                                results2.push((function(beekeeper_id) {
                                  return db.get(beekeeper_id, function(err, beekeeper) {
                                    var mailOptions, mailer;
                                    mailer = require('./mailTransporter');
                                    mailOptions = {
                                      from: 'openbeelab beehouse monitoring âœ” <remy.openbeelab@gmail.com>',
                                      to: beekeeper.email,
                                      subject: 'beehouse not producing enough',
                                      text: 'beehouse ' + beehouse.name + ' from apiary ' + apiary.name + ' is not producing enough. yesterday: ' + yesterdayMeasure.value + yesterdayMeasure.unit + ". today: " + todayMeasure.value + today.unit + "."
                                    };
                                    return mailer.sendMail(mailOptions, function(error, info) {
                                      if (error) {
                                        return console.log(error);
                                      } else {
                                        return console.log('Message sent: ' + info.response);
                                      }
                                    });
                                  });
                                })(beekeeper_id));
                              }
                              return results2;
                            }
                          }
                        }
                      });
                    }
                  });
                })(beehouse_id));
              }
              return results1;
            }
          })(apiary));
        }
        return results;
      });
    }
  });

}).call(this);
